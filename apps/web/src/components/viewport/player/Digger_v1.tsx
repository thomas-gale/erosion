/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    chassis: THREE.Mesh;
    bearing: THREE.Mesh;
    low_shovel: THREE.Mesh;
    shovel_attachment: THREE.Mesh;
    engine_base: THREE.Mesh;
    exhaust: THREE.Mesh;
    exhaust001: THREE.Mesh;
    cabin: THREE.Mesh;
    tracks: THREE.Mesh;
    tracks001: THREE.Mesh;
    drill_profile: THREE.Mesh;
    drill_bearing: THREE.Mesh;
    drill_pivot: THREE.Mesh;
    ground: THREE.Mesh;
  };
  materials: {
    black_metal: THREE.MeshStandardMaterial;
    yellow_metal: THREE.MeshStandardMaterial;
    drill: THREE.MeshStandardMaterial;
  };
};

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(
    "/digger_v1.glb"
  ) as unknown as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.chassis.geometry}
        material={nodes.chassis.material}
        position={[0, 1.1, 0]}
      >
        <mesh
          geometry={nodes.bearing.geometry}
          material={nodes.bearing.material}
          position={[0, -0.7, 0]}
        />
      </mesh>
      <mesh
        geometry={nodes.low_shovel.geometry}
        material={nodes.low_shovel.material}
        position={[0, 0.21, -2.13]}
      >
        <mesh
          geometry={nodes.shovel_attachment.geometry}
          material={nodes.shovel_attachment.material}
          position={[0, 0.1, 0.76]}
        />
      </mesh>
      <mesh
        geometry={nodes.engine_base.geometry}
        material={materials.yellow_metal}
        position={[0, 0.8, -0.3]}
      >
        <mesh
          geometry={nodes.exhaust.geometry}
          material={nodes.exhaust.material}
          position={[0.59, 0.78, 1.44]}
          rotation={[0, 0.72, 0]}
        />
        <mesh
          geometry={nodes.exhaust001.geometry}
          material={nodes.exhaust001.material}
          position={[0.42, 0.78, 1.44]}
          rotation={[0, 0.72, 0]}
        />
      </mesh>
      <mesh
        geometry={nodes.cabin.geometry}
        material={nodes.cabin.material}
        position={[-0.53, 1.77, -0.06]}
      />
      <mesh
        geometry={nodes.tracks.geometry}
        material={nodes.tracks.material}
        position={[-0.81, 0.3, 0]}
        rotation={[0, 0, -Math.PI / 2]}
      />
      <mesh
        geometry={nodes.tracks001.geometry}
        material={nodes.tracks001.material}
        position={[0.82, 0.3, 0]}
        rotation={[0, 0, -Math.PI / 2]}
      />
      <mesh
        geometry={nodes.drill_profile.geometry}
        material={materials.drill}
        position={[0, 1.09, -3.5]}
      />
      <mesh
        geometry={nodes.drill_bearing.geometry}
        material={nodes.drill_bearing.material}
        position={[0, 1.1, -1.6]}
      />
      <mesh
        geometry={nodes.drill_pivot.geometry}
        material={nodes.drill_pivot.material}
        position={[0, 1.1, -1.6]}
        rotation={[0, 0, -Math.PI / 2]}
      />
      <mesh
        geometry={nodes.ground.geometry}
        material={nodes.ground.material}
        position={[0, 0, -3.2]}
        scale={-35.31}
      />
    </group>
  );
}

useGLTF.preload("/digger_v1.glb");
